[versions]
coroutines = "1.7.2"
datetime = "0.4.0"
result = "1.1.18"
retry = "1.0.9"
detekt = "1.23.0"
hikari="5.0.1"
json = "1.5.1"
kotlin = "1.9.0"
ktor = "2.3.2"
jib = "3.3.2"
mysql = "8.0.33"
logback = "1.4.8"
inline-logger = "1.0.5"
postgresql="42.6.0"
sqldelight="2.0.0"
guava = "32.1.1-jre"
google-cloud-speech="4.18.0"
google-cloud-translate="2.23.0"

[libraries]
hikari = { module = "com.zaxxer:HikariCP", version.ref="hikari" }
io-gitlab-arturbosch-detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
kotlin-inline-logger = { module = "com.michael-bull.kotlin-inline-logger:kotlin-inline-logger", version.ref = "inline-logger" }
kotlin-result = { module = "com.michael-bull.kotlin-result:kotlin-result", version.ref = "result" }
kotlin-result-coroutines = { module = "com.michael-bull.kotlin-result:kotlin-result-coroutines", version.ref = "result" }
kotlin-retry = { module = "com.michael-bull.kotlin-retry:kotlin-retry", version.ref = "retry" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "json" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-auto-head-response = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-html-builder = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-partial-content = { module = "io.ktor:ktor-server-partial-content", version.ref = "ktor" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }

google-cloud-speech = { module = "com.google.cloud:google-cloud-speech", version.ref = "google-cloud-speech"}
google-cloud-translate = { module = "com.google.cloud:google-cloud-translate", version.ref = "google-cloud-translate"}

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
#squareup-sqldelight-coroutine-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
#squareup-sqldelight-jdbc-driver = { module = "com.squareup.sqldelight:jdbc-driver", version.ref = "sqlDelight" }
#squareup-sqldelight-runtime-jvm = { module = "com.squareup.sqldelight:runtime-jvm", version.ref = "sqlDelight" }

sqldelight-jdbc = { module = "app.cash.sqldelight:jdbc-driver", version.ref="sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref="sqldelight" }
sqldelight-postgresql = { module = "app.cash.sqldelight:postgresql-dialect", version.ref="sqldelight" }
postgresql = { module="org.postgresql:postgresql", version.ref="postgresql" }

google-guava = { module = "com.google.guava:guava", version.ref = "guava" }


[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
